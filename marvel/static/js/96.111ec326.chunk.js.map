{"version":3,"file":"static/js/96.111ec326.chunk.js","mappings":"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","sources":["components/appBanner/appBanner.js","components/errorMessage/ErrorMessage.js","components/comicList/comicList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import \"./appBanner.scss\";\r\n\r\nimport avengers from \"../../resources/img/Avengers.png\";\r\nimport logo from \"../../resources/img/Avengers_logo.png\";\r\n\r\nconst AppBanner = () => {\r\n  return (\r\n    <div className=\"app__banner\">\r\n      <img src={avengers} alt=\"avengers\" />\r\n      <div className=\"app__banner-text\">\r\n        New comics every week! <br /> Stay tuned!\r\n      </div>\r\n      <img src={logo} alt=\"logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppBanner;\r\n","import img from \"./error.gif\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ErrorMessage = () => {\r\n  const navigate = useNavigate();\r\n  // Обращение к папке public\r\n  //   return <img src={process.env.PUBLIC_URL + \"/error.gif\"} />;\r\n  return (\r\n    <>\r\n      <img\r\n        style={{ display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\" }}\r\n        src={img}\r\n        alt=\"Error\"\r\n      />\r\n      {/* <button\r\n        style={{\r\n          display: \"block\",\r\n          textAlign: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"24px\",\r\n          margin: \"30px auto\",\r\n          padding: \"5px\",\r\n          border: \"1px solid #000\",\r\n          width: \"max-content\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() => navigate(-1)}\r\n      >\r\n        Go Back\r\n      </button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./comicList.scss\";\r\n\r\nconst ComicList = () => {\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(200);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  const { loading, error, getAllComics } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\r\n    getAllComics(offset).then(onCharListLoaded);\r\n  };\r\n\r\n  const onCharListLoaded = (newComicList) => {\r\n    let ended = false;\r\n    if (newComicList.length < 8) {\r\n      ended = true;\r\n    }\r\n\r\n    setComicsList((comicsList) => [...comicsList, ...newComicList]);\r\n    setNewItemLoading(false);\r\n    setOffset((offset) => offset + 8);\r\n    setComicsEnded(ended);\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, id) => {\r\n      return (\r\n        <CSSTransition key={item.id} timeout={500} classNames=\"comic__item\">\r\n          <li className=\"comic__item\">\r\n            <Link to={`${item.id}`}>\r\n              <img src={item.thumbnail} alt={item.title} />\r\n              <div className=\"comic__item-name\">{item.title}</div>\r\n              <div className=\"comic__item-price\">{item.price}</div>\r\n            </Link>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n    return (\r\n      <ul className=\"comic__grid\">\r\n        <TransitionGroup component={null}>{items}</TransitionGroup>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  const items = renderItems(comicsList);\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"comic__list\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {items}\r\n\r\n      <button\r\n        className=\"btn btn__main btn__long \"\r\n        disabled={newItemLoading}\r\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">LOAD MORE</div>\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  // return (\r\n  //   <div className=\"comic__list\">\r\n  //     <ul className=\"comic__grid\">\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={uw} alt=\"ULTIMATE X-MEN\" />\r\n  //           <div className=\"comic__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n  //           <div className=\"comic__item-price\">9.99$</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={xMen} alt=\"X-MEN\" />\r\n  //           <div className=\"comic__item-name\">X-Men: Days of Future Past</div>\r\n  //           <div className=\"comic__item-price\">NOT AVAILABLE</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={uw} alt=\"ULTIMATE X-MEN\" />\r\n  //           <div className=\"comic__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n  //           <div className=\"comic__item-price\">9.99$</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={xMen} alt=\"X-MEN\" />\r\n  //           <div className=\"comic__item-name\">X-Men: Days of Future Past</div>\r\n  //           <div className=\"comic__item-price\">NOT AVAILABLE</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={uw} alt=\"ULTIMATE X-MEN\" />\r\n  //           <div className=\"comic__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n  //           <div className=\"comic__item-price\">9.99$</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={xMen} alt=\"X-MEN\" />\r\n  //           <div className=\"comic__item-name\">X-Men: Days of Future Past</div>\r\n  //           <div className=\"comic__item-price\">NOT AVAILABLE</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={uw} alt=\"ULTIMATE X-MEN\" />\r\n  //           <div className=\"comic__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n  //           <div className=\"comic__item-price\">9.99$</div>\r\n  //         </a>\r\n  //       </li>\r\n  //       <li className=\"comic__item\">\r\n  //         <a href=\"#\">\r\n  //           <img src={xMen} alt=\"X-MEN\" />\r\n  //           <div className=\"comic__item-name\">X-Men: Days of Future Past</div>\r\n  //           <div className=\"comic__item-price\">NOT AVAILABLE</div>\r\n  //         </a>\r\n  //       </li>\r\n  //     </ul>\r\n  //     <button className=\"btn btn__main btn__long \">\r\n  //       <div className=\"inner\">LOAD MORE</div>\r\n  //     </button>\r\n  //   </div>\r\n  // );\r\n};\r\n\r\nexport default ComicList;\r\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/appBanner\";\r\nimport ComicList from \"../comicList/comicList\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of our comics\" />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, error, request, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=0441b6176dfb307f18bba5c5f9ee903e\";\r\n  const _OffsetChars = 79;\r\n  const _OffestComics = 100;\r\n\r\n  // getResource = async (url) => {\r\n  //   let res = await fetch(url);\r\n\r\n  //   if (!res.ok) {\r\n  //     throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n  //   }\r\n\r\n  //   return await res.json();\r\n  // };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllCharacters = async (offset = _OffsetChars) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = _OffestComics) => {\r\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  // checkData = (data) => {\r\n  //   if (data) {\r\n  //     console.log(data);\r\n  //     console.log(data.length);\r\n  //     return data;\r\n  //   } else {\r\n  //     return \"There is no description for this character\";\r\n  //   }\r\n  // };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description ? comics.description : \"Description not found\",\r\n      pages: comics.pageCount,\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || \"en-us\",\r\n      price: comics.prices[0].price ? comics.prices[0].price + \"$\" : \"NOT AVAILABLE\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getCharacterByName,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n    clearError,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, error, request, clearError };\r\n};\r\n"],"names":["className","src","avengers","alt","logo","useNavigate","style","display","width","height","objectFit","margin","img","useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onCharListLoaded","newComicList","ended","length","items","arr","map","item","id","CSSTransition","timeout","classNames","to","thumbnail","title","price","TransitionGroup","component","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","onClick","Helmet","name","content","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getCharacterByName","res","results","_transformCharacter","getAllCharacters","getCharacter","_transformComics","getComic","char","description","slice","path","extension","homepage","urls","wiki","comics","pages","pageCount","language","textObjects","prices"],"sourceRoot":""}