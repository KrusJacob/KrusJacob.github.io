{"version":3,"file":"static/js/573.6ef101ad.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/randomChar/randomChar.js","components/charList/charList.js","components/skeleton/skeleton.js","components/charInfo/charInfo.js","components/errorBoundary/ErrorBoundary.js","components/form/Form.js","components/pages/MainPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import img from \"./error.gif\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ErrorMessage = () => {\r\n  const navigate = useNavigate();\r\n  // Обращение к папке public\r\n  //   return <img src={process.env.PUBLIC_URL + \"/error.gif\"} />;\r\n  return (\r\n    <>\r\n      <img\r\n        style={{ display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\" }}\r\n        src={img}\r\n        alt=\"Error\"\r\n      />\r\n      {/* <button\r\n        style={{\r\n          display: \"block\",\r\n          textAlign: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"24px\",\r\n          margin: \"30px auto\",\r\n          padding: \"5px\",\r\n          border: \"1px solid #000\",\r\n          width: \"max-content\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() => navigate(-1)}\r\n      >\r\n        Go Back\r\n      </button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useEffect } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport \"./randomChar.scss\";\r\n\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\n\r\nconst RandomChar = () => {\r\n  const [char, setChar] = useState({});\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n  const [show, setShow] = useState();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n  }, []);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n    setShow(true);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    setShow(false);\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n\r\n    getCharacter(id).then(onCharLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {errorMessage}\r\n      {spinner}\r\n\r\n      <CSSTransition in={show} timeout={600} classNames=\"randomchar__block\">\r\n        {() => content}\r\n      </CSSTransition>\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today! <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <div>\r\n          <button className=\"btn btn__main\">\r\n            <div className=\"inner\" onClick={updateChar}>\r\n              try it\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <img src={mjolnir} alt=\"mjolnir\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = char;\r\n\r\n  let imgStyle = { objectFit: \"cover\" };\r\n  if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\r\n    imgStyle = { objectFit: \"unset\" };\r\n  }\r\n\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img src={thumbnail} alt=\"thor\" className=\"randomchar__img\" style={imgStyle} />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">{description}</p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"btn btn__main\">\r\n            <div className=\"inner\">HOMEPAGE</div>\r\n          </a>\r\n          <a href={wiki} className=\"btn btn__secondary\">\r\n            <div className=\"inner\">WIKI</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomChar;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\"; //\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport \"./charList.scss\";\r\n\r\nconst CharList = (props) => {\r\n  const [charList, setCharList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(79);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const { loading, error, getAllCharacters } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\r\n    getAllCharacters(offset).then(onCharListLoaded);\r\n  };\r\n\r\n  const onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    setCharList((charList) => [...charList, ...newCharList]);\r\n    setNewItemLoading(false);\r\n    setOffset((offset) => offset + 9);\r\n    setCharEnded(ended);\r\n  };\r\n\r\n  const arrItems = useRef([]);\r\n\r\n  const onSelectItem = (index) => {\r\n    arrItems.current.forEach((item) => {\r\n      item.classList.remove(\"selected\");\r\n    });\r\n\r\n    arrItems.current[index].classList.add(\"selected\");\r\n    arrItems.current[index].focus();\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, index) => {\r\n      let imgStyle = { objectFit: \"cover\" };\r\n      if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\r\n        imgStyle = { objectFit: \"unset\" };\r\n      }\r\n\r\n      return (\r\n        <CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\r\n          <li\r\n            tabIndex={0}\r\n            ref={(el) => (arrItems.current[index] = el)}\r\n            className=\"char__item\"\r\n            onClick={() => {\r\n              props.onCharSelected(item.id);\r\n              onSelectItem(index);\r\n            }}\r\n            onFocus={() => {\r\n              props.onCharSelected(item.id);\r\n              onSelectItem(index);\r\n            }}\r\n          >\r\n            <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n            <div className=\"char__name\">{item.name}</div>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n    return (\r\n      <ul className=\"char__grid\">\r\n        <TransitionGroup component={null}>{items}</TransitionGroup>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  const items = renderItems(charList);\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {items}\r\n\r\n      <button\r\n        className=\"btn btn__main btn__long\"\r\n        disabled={newItemLoading}\r\n        style={{ display: charEnded ? \"none\" : \"block\" }}\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">LOAD MORE</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharList.propTypes = {\r\n  onCharSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CharList;\r\n","import \"./skeleton.scss\";\r\n\r\nconst Skeleton = () => {\r\n  return (\r\n    <div className=\"skeleton\">\r\n      <p className=\"char__select\">Please select a character to see information</p>\r\n      <div className=\"pulse skeleton__header\">\r\n        <div className=\"skeleton__circle\"></div>\r\n        <div className=\"skeleton__mini\"></div>\r\n      </div>\r\n      <div className=\"pulse skeleton__block\"></div>\r\n      <div className=\"pulse skeleton__block\"></div>\r\n      <div className=\"pulse skeleton__block\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\"; //\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../skeleton/skeleton\";\r\n\r\nimport \"./charInfo.scss\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nconst CharInfo = (props) => {\r\n  const [char, setChar] = useState(null);\r\n\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  const updateChar = () => {\r\n    const { charId } = props;\r\n    if (!charId) {\r\n      return;\r\n    }\r\n\r\n    clearError();\r\n    getCharacter(charId).then(onCharLoaded);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n  }, [props.charId]);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const skeleton = char || loading || error ? null : <Skeleton />;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"char__info\">\r\n      {skeleton}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n  let imgStyle = { objectFit: \"cover\" };\r\n  if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\r\n    imgStyle = { objectFit: \"unset\" };\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={imgStyle} />\r\n        <div>\r\n          <p className=\"char__basics-name\">{name}</p>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"btn btn__main\">\r\n              <div className=\"inner\">HOMEPAGE</div>\r\n            </a>\r\n            <a href={wiki} className=\"btn btn__secondary\">\r\n              <div className=\"inner\">WIKI</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        {comics.length > 0 ? null : \"Comics not found\"}\r\n        {comics.map((item, i) => {\r\n          // eslint-disable-next-line\r\n          if (i > 10) {\r\n            return;\r\n          }\r\n\r\n          return (\r\n            <li key={i} className=\"char__comics-item\">\r\n              <Link to={`/comics/${item.resourceURI.split(\"/\").pop()}`}>{item.name}</Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage></ErrorMessage>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./form.scss\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.name) {\r\n    errors.name = \"This field is required\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst CharForm = () => {\r\n  const [char, setChar] = useState(null);\r\n  const { loading, error, getCharacterByName, clearError } = useMarvelService();\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = (char) => {\r\n    clearError();\r\n\r\n    getCharacterByName(char).then(onCharLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const results = !char ? null : char.length > 0 ? (\r\n    <SuccesFound char={char} />\r\n  ) : (\r\n    <div className=\"search search-error\">The character was not found. Check the name and try again</div>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n      }}\r\n      validate={validate}\r\n      onSubmit={(value) => {\r\n        updateChar(value.name);\r\n      }}\r\n    >\r\n      <Form className=\"form\" onChange={(e) => (!e.target.value ? setChar(null) : null)}>\r\n        <label htmlFor=\"name\">Or find a character by name:</label>\r\n        <div className=\"input\">\r\n          <Field placeholder=\"Enter name\" name=\"name\" type=\"text\" />\r\n\r\n          <button disabled={loading} className=\"btn btn__main\" type=\"submit\">\r\n            <div className=\"inner\">FIND</div>\r\n          </button>\r\n          {results}\r\n          {errorMessage}\r\n          <FormikErrorMessage className=\"search search-error\" name=\"name\" component=\"div\" />\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst SuccesFound = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"search search-success\">There is! Visit {props.char[0].name} page?</div>\r\n      <Link to={`/characters/${props.char[0].id}`} className=\"btn btn__secondary\">\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharForm;\r\n","import { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport RandomChar from \"../randomChar/randomChar\";\r\nimport CharList from \"../charList/charList\";\r\nimport CharInfo from \"../charInfo/charInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport CharForm from \"../form/Form\";\r\n\r\nimport vision from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Marvel information\" />\r\n        <title>Marvel information portal</title>\r\n      </Helmet>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <div>\r\n          <ErrorBoundary>\r\n            <CharInfo charId={selectedChar} />\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <CharForm />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={vision} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, error, request, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=0441b6176dfb307f18bba5c5f9ee903e\";\r\n  const _OffsetChars = 79;\r\n  const _OffestComics = 100;\r\n\r\n  // getResource = async (url) => {\r\n  //   let res = await fetch(url);\r\n\r\n  //   if (!res.ok) {\r\n  //     throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n  //   }\r\n\r\n  //   return await res.json();\r\n  // };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllCharacters = async (offset = _OffsetChars) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = _OffestComics) => {\r\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  // checkData = (data) => {\r\n  //   if (data) {\r\n  //     console.log(data);\r\n  //     console.log(data.length);\r\n  //     return data;\r\n  //   } else {\r\n  //     return \"There is no description for this character\";\r\n  //   }\r\n  // };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description ? comics.description : \"Description not found\",\r\n      pages: comics.pageCount,\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || \"en-us\",\r\n      price: comics.prices[0].price ? comics.prices[0].price + \"$\" : \"NOT AVAILABLE\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getCharacterByName,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n    clearError,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, error, request, clearError };\r\n};\r\n"],"names":["useNavigate","style","display","width","height","objectFit","margin","src","img","alt","View","char","name","description","thumbnail","homepage","wiki","imgStyle","className","href","useState","setChar","useMarvelService","loading","error","getCharacter","clearError","show","setShow","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","errorMessage","ErrorMessage","spinner","Spinner","content","CSSTransition","in","timeout","classNames","onClick","mjolnir","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","arrItems","useRef","onSelectItem","index","current","forEach","item","classList","remove","add","focus","items","arr","map","tabIndex","ref","el","onCharSelected","onFocus","TransitionGroup","component","renderItems","disabled","comics","i","to","resourceURI","split","pop","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","validate","values","errors","SuccesFound","getCharacterByName","results","initialValues","onSubmit","value","onChange","e","target","htmlFor","placeholder","type","selectedChar","Helmet","vision","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","useHttp","_apiBase","_apiKey","res","_transformCharacter","getAllComics","_transformComics","getComic","slice","path","extension","urls","title","pages","pageCount","language","textObjects","price","prices"],"sourceRoot":""}