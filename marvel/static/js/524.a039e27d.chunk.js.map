{"version":3,"file":"static/js/524.a039e27d.chunk.js","mappings":"oOA0CMA,EAAO,SAAH,GAAmB,IAAbC,EAAK,EAALA,MACNC,EAA0DD,EAA1DC,MAAOC,EAAmDF,EAAnDE,YAAaC,EAAsCH,EAAtCG,UAAWC,EAA2BJ,EAA3BI,MAAOC,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,SACrD,OACE,iBAAKC,UAAU,gBAAe,WAC5B,UAAC,IAAM,YACL,iBAAMC,KAAK,cAAcC,QAAO,UAAKR,EAAK,mBAC1C,2BAAQA,QAGV,gBAAKS,IAAKP,EAAWQ,IAAKV,KAC1B,iBAAKM,UAAU,cAAa,WAC1B,eAAIA,UAAU,eAAc,SAAEN,KAC9B,cAAGM,UAAU,eAAc,SAAEL,KAC7B,eAAGK,UAAU,cAAa,UAAEH,EAAK,aACjC,cAAGG,UAAU,kBAAiB,SAAED,KAChC,cAAGC,UAAU,eAAc,SAAEF,QAG/B,SAAC,KAAI,CAACE,UAAU,cAAcK,GAAG,UAAS,2BAKhD,EAEA,UAzDwB,WACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAK,eAAjCf,EAAK,KAAEgB,EAAQ,KACtB,GAAiDC,EAAAA,EAAAA,KAAzCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,YAOlCC,EAAAA,EAAAA,YAAU,WAJRD,IACAD,EAASP,GAASU,KAAKC,EAKzB,GAAG,CAACX,IAEJ,IAAMW,EAAgB,SAACxB,GACrBgB,EAAShB,EACX,EAEMyB,EAAeN,GAAQ,SAAC,IAAY,IAAM,KAC1CO,EAAUR,GAAU,SAAC,IAAO,IAAM,KAClCT,EAAYS,GAAWC,IAAUnB,EAAkC,MAAzB,SAACD,EAAI,CAACC,MAAOA,IAE7D,OACE,iCACE,SAAC,IAAS,IACTyB,EACAC,EACAjB,IAGP,C","sources":["components/pages/SingleComicPage.js"],"sourcesContent":["import { useParams, Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport AppBanner from \"../appBanner/appBanner\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport \"./singleComicPage.scss\";\r\n\r\nconst SingleComicPage = () => {\r\n  const { comicId } = useParams();\r\n  const [comic, setComic] = useState(null);\r\n  const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n  const updateComic = () => {\r\n    clearError();\r\n    getComic(comicId).then(onComicLoaded);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateComic();\r\n  }, [comicId]);\r\n\r\n  const onComicLoaded = (comic) => {\r\n    setComic(comic);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({ comic }) => {\r\n  const { title, description, thumbnail, pages, price, language } = comic;\r\n  return (\r\n    <div className=\"single__comic\">\r\n      <Helmet>\r\n        <meta name=\"description\" content={`${title} comics book`} />\r\n        <title>{title}</title>\r\n      </Helmet>\r\n\r\n      <img src={thumbnail} alt={title} />\r\n      <div className=\"comic__text\">\r\n        <h2 className=\"comic__title\">{title}</h2>\r\n        <p className=\"comic__descr\">{description}</p>\r\n        <p className=\"comic__page\">{pages} pages</p>\r\n        <p className=\"comic__language\">{language}</p>\r\n        <p className=\"comic__price\">{price}</p>\r\n      </div>\r\n\r\n      <Link className=\"comic__back\" to=\"/comics\">\r\n        Back to all\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleComicPage;\r\n"],"names":["View","comic","title","description","thumbnail","pages","price","language","className","name","content","src","alt","to","comicId","useParams","useState","setComic","useMarvelService","loading","error","getComic","clearError","useEffect","then","onComicLoaded","errorMessage","spinner"],"sourceRoot":""}